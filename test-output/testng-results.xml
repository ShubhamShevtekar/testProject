<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="16" failed="0" total="17" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="976972" started-at="2020-07-17T14:52:25Z" finished-at="2020-07-17T15:08:42Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="976972" started-at="2020-07-17T14:52:25Z" finished-at="2020-07-17T15:08:42Z">
      <class name="scenarios.GEO.v1.CountryGraphQL">
        <test-method status="PASS" signature="cleanFolder()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="cleanFolder" is-config="true" duration-ms="18" started-at="2020-07-17T08:52:25Z" finished-at="2020-07-17T08:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanFolder -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="beforeSuite" is-config="true" duration-ms="3" started-at="2020-07-17T08:52:25Z" finished-at="2020-07-17T08:52:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="getToken()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getToken" is-config="true" duration-ms="990" started-at="2020-07-17T08:52:25Z" finished-at="2020-07-17T08:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method status="PASS" signature="startReport()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startReport" is-config="true" duration-ms="200" started-at="2020-07-17T08:52:26Z" finished-at="2020-07-17T08:52:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="before()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="before" is-config="true" duration-ms="1014" started-at="2020-07-17T08:52:27Z" finished-at="2020-07-17T08:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="1" started-at="2020-07-17T08:52:28Z" finished-at="2020-07-17T08:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="1068" started-at="2020-07-17T08:52:28Z" finished-at="2020-07-17T08:52:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_01()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_01()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_01" duration-ms="14" started-at="2020-07-17T08:52:29Z" finished-at="2020-07-17T08:52:29Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_01(CountryGraphQL.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="577" started-at="2020-07-17T08:52:29Z" finished-at="2020-07-17T08:52:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_02()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T08:52:29Z" finished-at="2020-07-17T08:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="TC_02()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_02" duration-ms="962472" started-at="2020-07-17T08:52:29Z" finished-at="2020-07-17T09:08:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:32Z" finished-at="2020-07-17T09:08:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="525" started-at="2020-07-17T09:08:32Z" finished-at="2020-07-17T09:08:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_03()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_03()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_03" duration-ms="16" started-at="2020-07-17T09:08:32Z" finished-at="2020-07-17T09:08:32Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_03(CountryGraphQL.java:230)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_03 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="471" started-at="2020-07-17T09:08:32Z" finished-at="2020-07-17T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_04()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:32Z" finished-at="2020-07-17T09:08:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="SKIP" signature="TC_04()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_04" duration-ms="10" started-at="2020-07-17T09:08:33Z" finished-at="2020-07-17T09:08:33Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_04(CountryGraphQL.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_04 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:33Z" finished-at="2020-07-17T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="880" started-at="2020-07-17T09:08:33Z" finished-at="2020-07-17T09:08:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_05()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_05()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_05" duration-ms="6" started-at="2020-07-17T09:08:34Z" finished-at="2020-07-17T09:08:34Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_05(CountryGraphQL.java:318)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_05 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:34Z" finished-at="2020-07-17T09:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="451" started-at="2020-07-17T09:08:34Z" finished-at="2020-07-17T09:08:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_06()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_06()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_06" duration-ms="9" started-at="2020-07-17T09:08:34Z" finished-at="2020-07-17T09:08:34Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_06(CountryGraphQL.java:337)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_06 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="1" started-at="2020-07-17T09:08:34Z" finished-at="2020-07-17T09:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="392" started-at="2020-07-17T09:08:34Z" finished-at="2020-07-17T09:08:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_07()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_07()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_07" duration-ms="5" started-at="2020-07-17T09:08:35Z" finished-at="2020-07-17T09:08:35Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_07(CountryGraphQL.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_07 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:35Z" finished-at="2020-07-17T09:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="815" started-at="2020-07-17T09:08:35Z" finished-at="2020-07-17T09:08:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_08()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_08()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_08" duration-ms="9" started-at="2020-07-17T09:08:35Z" finished-at="2020-07-17T09:08:35Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_08(CountryGraphQL.java:372)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_08 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:35Z" finished-at="2020-07-17T09:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="493" started-at="2020-07-17T09:08:35Z" finished-at="2020-07-17T09:08:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_09()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_09()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_09" duration-ms="5" started-at="2020-07-17T09:08:36Z" finished-at="2020-07-17T09:08:36Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_09(CountryGraphQL.java:403)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="434" started-at="2020-07-17T09:08:36Z" finished-at="2020-07-17T09:08:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_10()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:36Z" finished-at="2020-07-17T09:08:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="SKIP" signature="TC_10()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_10" duration-ms="15" started-at="2020-07-17T09:08:36Z" finished-at="2020-07-17T09:08:36Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_10(CountryGraphQL.java:429)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_10 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="955" started-at="2020-07-17T09:08:36Z" finished-at="2020-07-17T09:08:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_11()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:36Z" finished-at="2020-07-17T09:08:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="SKIP" signature="TC_11()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_11" duration-ms="5" started-at="2020-07-17T09:08:37Z" finished-at="2020-07-17T09:08:37Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_11(CountryGraphQL.java:573)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_11 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="403" started-at="2020-07-17T09:08:37Z" finished-at="2020-07-17T09:08:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_12()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:37Z" finished-at="2020-07-17T09:08:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="SKIP" signature="TC_12()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_12" duration-ms="36" started-at="2020-07-17T09:08:38Z" finished-at="2020-07-17T09:08:38Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_12(CountryGraphQL.java:722)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_12 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:38Z" finished-at="2020-07-17T09:08:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="907" started-at="2020-07-17T09:08:38Z" finished-at="2020-07-17T09:08:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_13()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_13()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_13" duration-ms="7" started-at="2020-07-17T09:08:39Z" finished-at="2020-07-17T09:08:39Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_13(CountryGraphQL.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_13 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="1" started-at="2020-07-17T09:08:39Z" finished-at="2020-07-17T09:08:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="406" started-at="2020-07-17T09:08:39Z" finished-at="2020-07-17T09:08:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_14()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_14()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_14" duration-ms="5" started-at="2020-07-17T09:08:39Z" finished-at="2020-07-17T09:08:39Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_14(CountryGraphQL.java:1023)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_14 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="835" started-at="2020-07-17T09:08:39Z" finished-at="2020-07-17T09:08:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_15()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:39Z" finished-at="2020-07-17T09:08:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="SKIP" signature="TC_15()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_15" duration-ms="5" started-at="2020-07-17T09:08:40Z" finished-at="2020-07-17T09:08:40Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_15(CountryGraphQL.java:1113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_15 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="1" started-at="2020-07-17T09:08:40Z" finished-at="2020-07-17T09:08:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="486" started-at="2020-07-17T09:08:40Z" finished-at="2020-07-17T09:08:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_16()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_16()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_16" duration-ms="5" started-at="2020-07-17T09:08:40Z" finished-at="2020-07-17T09:08:40Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_16(CountryGraphQL.java:1203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_16 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-17T09:08:40Z" finished-at="2020-07-17T09:08:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="startRepo" is-config="true" duration-ms="415" started-at="2020-07-17T09:08:40Z" finished-at="2020-07-17T09:08:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.CountryGraphQL.TC_17()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="SKIP" signature="TC_17()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="TC_17" duration-ms="5" started-at="2020-07-17T09:08:41Z" finished-at="2020-07-17T09:08:41Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Execution skipped as per test flag set]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Execution skipped as per test flag set
	at scenarios.GEO.v1.CountryGraphQL.TC_17(CountryGraphQL.java:1300)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_17 -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="endReport" is-config="true" duration-ms="1439" started-at="2020-07-17T09:08:41Z" finished-at="2020-07-17T09:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="zipFolder()[pri:0, instance:scenarios.GEO.v1.CountryGraphQL@18486a3]" name="zipFolder" is-config="true" duration-ms="124" started-at="2020-07-17T09:08:42Z" finished-at="2020-07-17T09:08:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zipFolder -->
      </class> <!-- scenarios.GEO.v1.CountryGraphQL -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>

<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="7" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="25153" started-at="2020-07-10T10:51:06Z" finished-at="2020-07-10T10:51:31Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="25153" started-at="2020-07-10T10:51:06Z" finished-at="2020-07-10T10:51:31Z">
      <class name="scenarios.GEO.v1.ScriptGet">
        <test-method status="PASS" signature="cleanFolder()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="cleanFolder" is-config="true" duration-ms="20" started-at="2020-07-10T04:51:06Z" finished-at="2020-07-10T04:51:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanFolder -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="beforeSuite" is-config="true" duration-ms="2" started-at="2020-07-10T04:51:06Z" finished-at="2020-07-10T04:51:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="getToken()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getToken" is-config="true" duration-ms="805" started-at="2020-07-10T04:51:06Z" finished-at="2020-07-10T04:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getToken -->
        <test-method status="PASS" signature="startReport()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startReport" is-config="true" duration-ms="230" started-at="2020-07-10T04:51:07Z" finished-at="2020-07-10T04:51:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="before()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="before" is-config="true" duration-ms="1049" started-at="2020-07-10T04:51:07Z" finished-at="2020-07-10T04:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startRepo" is-config="true" duration-ms="989" started-at="2020-07-10T04:51:08Z" finished-at="2020-07-10T04:51:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.ScriptGet.TC_01()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-10T04:51:08Z" finished-at="2020-07-10T04:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="TC_01()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="TC_01" duration-ms="13165" started-at="2020-07-10T04:51:09Z" finished-at="2020-07-10T04:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-10T04:51:22Z" finished-at="2020-07-10T04:51:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startRepo" is-config="true" duration-ms="633" started-at="2020-07-10T04:51:22Z" finished-at="2020-07-10T04:51:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.ScriptGet.TC_02()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="FAIL" signature="TC_02()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="TC_02" duration-ms="801" started-at="2020-07-10T04:51:23Z" finished-at="2020-07-10T04:51:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test Failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test Failed
	at org.testng.Assert.fail(Assert.java:94)
	at scenarios.GEO.v1.ScriptGet.TC_02(ScriptGet.java:374)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-10T04:51:24Z" finished-at="2020-07-10T04:51:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startRepo" is-config="true" duration-ms="611" started-at="2020-07-10T04:51:24Z" finished-at="2020-07-10T04:51:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.ScriptGet.TC_03()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="TC_03()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="TC_03" duration-ms="755" started-at="2020-07-10T04:51:24Z" finished-at="2020-07-10T04:51:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_03 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startRepo" is-config="true" duration-ms="598" started-at="2020-07-10T04:51:25Z" finished-at="2020-07-10T04:51:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.ScriptGet.TC_04()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-10T04:51:25Z" finished-at="2020-07-10T04:51:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="TC_04()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="TC_04" duration-ms="737" started-at="2020-07-10T04:51:25Z" finished-at="2020-07-10T04:51:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_04 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-10T04:51:26Z" finished-at="2020-07-10T04:51:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startRepo" is-config="true" duration-ms="613" started-at="2020-07-10T04:51:26Z" finished-at="2020-07-10T04:51:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.ScriptGet.TC_05()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="FAIL" signature="TC_05()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="TC_05" duration-ms="732" started-at="2020-07-10T04:51:27Z" finished-at="2020-07-10T04:51:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test Failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test Failed
	at org.testng.Assert.fail(Assert.java:94)
	at scenarios.GEO.v1.ScriptGet.TC_05(ScriptGet.java:726)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_05 -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-10T04:51:28Z" finished-at="2020-07-10T04:51:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startRepo" is-config="true" duration-ms="662" started-at="2020-07-10T04:51:28Z" finished-at="2020-07-10T04:51:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.ScriptGet.TC_06()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="TC_06()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="TC_06" duration-ms="815" started-at="2020-07-10T04:51:28Z" finished-at="2020-07-10T04:51:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_06 -->
        <test-method status="PASS" signature="startRepo(java.lang.reflect.Method)[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="startRepo" is-config="true" duration-ms="596" started-at="2020-07-10T04:51:29Z" finished-at="2020-07-10T04:51:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void scenarios.GEO.v1.ScriptGet.TC_07()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startRepo -->
        <test-method status="PASS" signature="getCurrentDate()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="getCurrentDate" is-config="true" duration-ms="0" started-at="2020-07-10T04:51:29Z" finished-at="2020-07-10T04:51:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCurrentDate -->
        <test-method status="PASS" signature="TC_07()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="TC_07" duration-ms="800" started-at="2020-07-10T04:51:30Z" finished-at="2020-07-10T04:51:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_07 -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="endReport" is-config="true" duration-ms="470" started-at="2020-07-10T04:51:30Z" finished-at="2020-07-10T04:51:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="zipFolder()[pri:0, instance:scenarios.GEO.v1.ScriptGet@136e637]" name="zipFolder" is-config="true" duration-ms="61" started-at="2020-07-10T04:51:31Z" finished-at="2020-07-10T04:51:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zipFolder -->
      </class> <!-- scenarios.GEO.v1.ScriptGet -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>

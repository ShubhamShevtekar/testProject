<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="SYN-FLX-005" name="Default test" tests="17" failures="1" timestamp="15 Jul 2020 17:25:36 GMT" time="20.748" errors="0">
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
	at scenarios.GEO.v1.CountryGraphQL.after(CountryGraphQL.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:712)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
    </failure>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@BeforeMethod getCurrentDate" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod getCurrentDate -->
  <testcase name="@BeforeMethod startRepo" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @BeforeMethod startRepo -->
  <testcase name="@AfterMethod after" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterMethod after -->
  <testcase name="@AfterClass endReport" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- @AfterClass endReport -->
  <testcase name="TC_01" time="17.495" classname="scenarios.GEO.v1.CountryGraphQL">
    <failure type="java.lang.AssertionError" message="Test Failed">
      <![CDATA[java.lang.AssertionError: Test Failed
	at org.testng.Assert.fail(Assert.java:94)
	at scenarios.GEO.v1.CountryGraphQL.countryWithGeoplId(CountryGraphQL.java:1921)
	at scenarios.GEO.v1.CountryGraphQL.TC_01(CountryGraphQL.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
    </failure>
  </testcase> <!-- TC_01 -->
  <testcase name="TC_02" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_02 -->
  <testcase name="TC_03" time="0.002" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_03 -->
  <testcase name="TC_04" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_04 -->
  <testcase name="TC_05" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_05 -->
  <testcase name="TC_06" time="0.002" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_06 -->
  <testcase name="TC_07" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_07 -->
  <testcase name="TC_08" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_08 -->
  <testcase name="TC_09" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_09 -->
  <testcase name="TC_10" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_10 -->
  <testcase name="TC_11" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_11 -->
  <testcase name="TC_12" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_12 -->
  <testcase name="TC_13" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_13 -->
  <testcase name="TC_14" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_14 -->
  <testcase name="TC_15" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_15 -->
  <testcase name="TC_16" time="0.0" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_16 -->
  <testcase name="TC_17" time="0.001" classname="scenarios.GEO.v1.CountryGraphQL">
    <skipped/>
  </testcase> <!-- TC_17 -->
</testsuite> <!-- Default test -->
